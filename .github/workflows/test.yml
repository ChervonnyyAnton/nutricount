name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-minimal.txt
        mkdir -p logs
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Lint with flake8
      run: |
        flake8 src/ app.py --max-line-length=100 --ignore=E501,W503,E226
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Security scan with Bandit
      run: |
        echo "## 🔒 Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Run bandit and save results
        bandit -r src/ app.py -ll -f json -o bandit-report.json || true
        
        # Display results in console
        echo "Running security scan..."
        bandit -r src/ app.py -ll 2>&1 | tee bandit-output.txt || true
        
        # Parse and summarize results
        if grep -q "No issues identified" bandit-output.txt; then
          echo "✅ **No security issues found**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Security scan completed successfully with no vulnerabilities detected." >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Security scan found potential issues**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please review the security report artifact for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: Some findings may be false positives after proper validation." >> $GITHUB_STEP_SUMMARY
          echo "See SECURITY_FIXES_OCT23.md for documented false positives." >> $GITHUB_STEP_SUMMARY
        fi
      env:
        PYTHONPATH: ${{ github.workspace }}
      continue-on-error: true
    
    - name: Upload security scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bandit-security-report
        path: |
          bandit-report.json
          bandit-output.txt
        retention-days: 30
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -f dockerfile -t nutrition-tracker:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 5000:5000 nutrition-tracker:latest
        sleep 10
        curl -f http://localhost:5000/health || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy authorization
      run: |
        echo "🚀 Deployment Authorization"
        echo "✅ All tests and builds passed"
        echo "🔐 Authorizing deployment to production and GitHub Pages"
        echo ""
        echo "## 🚀 Deployment Authorization" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Tests passed**: Unit tests, linting, coverage" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Build passed**: Docker image built and health-checked" >> $GITHUB_STEP_SUMMARY
        echo "🔐 **Authorization granted** for:" >> $GITHUB_STEP_SUMMARY
        echo "  - Production deployment to Raspberry Pi" >> $GITHUB_STEP_SUMMARY
        echo "  - GitHub Pages demo deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📡 GitHub Pages workflow will be triggered automatically" >> $GITHUB_STEP_SUMMARY
