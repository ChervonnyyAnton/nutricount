name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -c "
        print('🧪 Running basic tests...')
        
        # Test 1: Check if app.py exists
        import os
        if os.path.exists('app.py'):
            print('✅ app.py exists')
        else:
            print('❌ app.py not found')
            exit(1)
        
        # Test 2: Check if init_db.py exists
        if os.path.exists('init_db.py'):
            print('✅ init_db.py exists')
        else:
            print('❌ init_db.py not found')
            exit(1)
        
        # Test 3: Check if requirements.txt exists
        if os.path.exists('requirements.txt'):
            print('✅ requirements.txt exists')
        else:
            print('❌ requirements.txt not found')
            exit(1)
        
        # Test 4: Check if static directory exists
        if os.path.exists('static'):
            print('✅ static directory exists')
        else:
            print('❌ static directory not found')
            exit(1)
        
        print('🎉 All basic tests passed!')
        "
    
    - name: Run linting
      run: |
        flake8 src/ --max-line-length=100 --ignore=E501,W503
    
    - name: Check database initialization
      run: |
        python init_db.py
    
    - name: Test application startup
      run: |
        python -c "
        from app import app
        with app.test_client() as client:
            response = client.get('/health')
            assert response.status_code == 200
        print('✅ Application health check passed')
        "

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Raspberry Pi
      run: |
        echo "🚀 CI/CD pipeline passed successfully!"
        echo "✅ All tests passed, ready for deployment"
        echo "📡 Webhook will trigger deployment to Raspberry Pi"
        
        # Here we could add actual deployment steps if needed
        # For now, the webhook will handle the deployment
