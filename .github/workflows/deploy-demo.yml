name: Deploy Demo to GitHub Pages

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [ main ]
  workflow_dispatch:

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy Demo to GitHub Pages
    runs-on: ubuntu-latest
    # Only deploy if CI/CD Pipeline succeeded (or if manually triggered)
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Verify CI/CD Authorization
      run: |
        echo "## ✅ CI/CD Pipeline Authorization" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This deployment is authorized by the successful completion of:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Test job (linting + unit tests)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Build job (Docker image build + health check)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Deploy job (deployment authorization)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**CI/CD Workflow Run**: ${{ github.event.workflow_run.html_url }}" >> $GITHUB_STEP_SUMMARY
        echo "**Triggered by**: ${{ github.event.workflow_run.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
    
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Create deployment version file
      run: |
        # Create deployment metadata
        mkdir -p demo/.deployment
        cat > demo/.deployment/version.json << EOF
        {
          "commit_sha": "${{ github.sha }}",
          "commit_message": "${{ github.event.head_commit.message || github.event.workflow_run.head_commit.message }}",
          "deployed_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "deployed_by": "${{ github.actor }}",
          "workflow_run": "${{ github.run_id }}",
          "workflow_run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
          "ci_workflow_run": "${{ github.event.workflow_run.html_url }}",
          "git_ref": "${{ github.ref }}",
          "repository": "${{ github.repository }}"
        }
        EOF
        
        # Create human-readable version file
        cat > demo/.deployment/VERSION << EOF
        Deployment Information
        ======================
        Version: ${{ github.sha }}
        Deployed: $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)
        By: ${{ github.actor }}
        Commit: ${{ github.event.head_commit.message || github.event.workflow_run.head_commit.message }}
        Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        EOF
        
        echo "✅ Created deployment version files"
        cat demo/.deployment/VERSION
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'demo'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Deployment Summary
      run: |
        echo "## 🚀 Demo Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Demo deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
        echo "📱 Access at: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Deployment Version" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed**: $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)" >> $GITHUB_STEP_SUMMARY
        echo "- **By**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Info**: [${{ steps.deployment.outputs.page_url }}.deployment/VERSION](${{ steps.deployment.outputs.page_url }}.deployment/VERSION)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Demo Features:" >> $GITHUB_STEP_SUMMARY
        echo "- Product management" >> $GITHUB_STEP_SUMMARY
        echo "- Daily food logging" >> $GITHUB_STEP_SUMMARY
        echo "- Statistics dashboard" >> $GITHUB_STEP_SUMMARY
        echo "- Keto index calculation" >> $GITHUB_STEP_SUMMARY
        echo "- Dark/Light theme" >> $GITHUB_STEP_SUMMARY
        echo "- Mobile-optimized" >> $GITHUB_STEP_SUMMARY
        echo "- Offline support" >> $GITHUB_STEP_SUMMARY

  e2e-tests-pages:
    name: E2E Tests - GitHub Pages (Live)
    runs-on: ubuntu-latest
    needs: deploy
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Node dependencies
      run: |
        npm install
    
    - name: Install Playwright browsers
      run: |
        npx playwright install chromium --with-deps
    
    - name: Wait for Pages deployment to be ready
      run: |
        echo "Waiting for GitHub Pages to be fully deployed..."
        sleep 30
        # Verify the page is accessible
        timeout 60 bash -c 'until curl -f https://chervonnyyanton.github.io/nutricount/; do echo "Waiting for Pages..."; sleep 5; done'
    
    - name: Run E2E tests (GitHub Pages)
      run: |
        npm run test:e2e
      env:
        BASE_URL: https://chervonnyyanton.github.io/nutricount
        CI: true
    
    - name: Upload test results on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-pages
        path: playwright-report/
        retention-days: 7
    
    - name: Upload test videos on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-videos-pages
        path: test-results/
        retention-days: 7
    
    - name: Generate test summary
      if: always()
      run: |
        echo "## 🎭 E2E Test Results - GitHub Pages (Live)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tested URL**: https://chervonnyyanton.github.io/nutricount/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f playwright-report/index.html ]; then
          echo "✅ **E2E tests passed on live GitHub Pages deployment**" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **E2E tests failed on live GitHub Pages**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 Artifacts available for debugging" >> $GITHUB_STEP_SUMMARY
        fi

  auto-rollback:
    name: Automated Rollback on E2E Failure
    runs-on: ubuntu-latest
    needs: [deploy, e2e-tests-pages]
    if: ${{ failure() && needs.deploy.result == 'success' && needs.e2e-tests-pages.result == 'failure' }}
    permissions:
      contents: read
      actions: write
    
    steps:
    - name: Check rollback history (loop prevention)
      id: check-history
      run: |
        # Check how many rollbacks in the last hour
        ROLLBACK_COUNT=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/workflows/rollback.yml/runs?created=>$(date -u -d '1 hour ago' +%Y-%m-%dT%H:%M:%SZ)&status=success" \
          | jq '.total_count // 0')
        
        echo "Rollbacks in last hour: $ROLLBACK_COUNT"
        echo "rollback_count=$ROLLBACK_COUNT" >> $GITHUB_OUTPUT
        
        if [ "$ROLLBACK_COUNT" -ge 2 ]; then
          echo "❌ Too many rollbacks detected ($ROLLBACK_COUNT in last hour)"
          echo "## ⚠️ Rollback Loop Detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ❌ Automatic rollback blocked" >> $GITHUB_STEP_SUMMARY
          echo "**Reason**: More than 2 rollbacks in the last hour" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This indicates a potential rollback loop. Manual intervention required." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Action Required**: Investigate root cause before attempting another rollback" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        
        echo "✅ Rollback history check passed - proceeding with automatic rollback"
    
    - name: Get previous successful deployment
      id: get-previous
      run: |
        # Get the previous commit (one before current)
        PREVIOUS_COMMIT="${{ github.event.before }}"
        
        if [ -z "$PREVIOUS_COMMIT" ] || [ "$PREVIOUS_COMMIT" = "0000000000000000000000000000000000000000" ]; then
          # Fallback: use parent commit
          PREVIOUS_COMMIT=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}" \
            | jq -r '.parents[0].sha')
        fi
        
        echo "previous_commit=$PREVIOUS_COMMIT" >> $GITHUB_OUTPUT
        echo "Previous deployment commit: $PREVIOUS_COMMIT"
    
    - name: Trigger Rollback Workflow
      uses: actions/github-script@v7
      with:
        script: |
          console.log('E2E tests failed after deployment - triggering automatic rollback');
          
          const response = await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'rollback.yml',
            ref: 'main',
            inputs: {
              reason: `Automated rollback: E2E tests failed after deployment (commit ${context.sha.substring(0, 7)})`,
              target_commit: '${{ steps.get-previous.outputs.previous_commit }}'
            }
          });
          
          core.summary
            .addHeading('🔄 Automatic Rollback Triggered')
            .addRaw('')
            .addRaw('**Reason**: E2E tests failed after deployment')
            .addRaw('')
            .addRaw('**Failed Commit**: `' + context.sha + '`')
            .addRaw('')
            .addRaw('**Rolling back to**: `${{ steps.get-previous.outputs.previous_commit }}`')
            .addRaw('')
            .addRaw('**Rollback Workflow**: Check the Actions tab for rollback progress')
            .addRaw('')
            .addRaw('⚠️ **Manual Investigation Required**')
            .addRaw('')
            .addRaw('1. Review E2E test failures in artifacts')
            .addRaw('2. Identify root cause')
            .addRaw('3. Create fix PR')
            .addRaw('4. Ensure tests pass before merging')
            .write();
          
          console.log('✅ Rollback workflow dispatch successful');
