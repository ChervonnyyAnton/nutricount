name: E2E Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Run E2E tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-minimal.txt
        mkdir -p logs
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Install Node dependencies
      run: |
        npm install
    
    - name: Install Playwright browsers
      run: |
        npx playwright install chromium --with-deps
    
    - name: Start Flask server
      run: |
        export PYTHONPATH=${{ github.workspace }}
        export FLASK_ENV=test
        python3 app.py &
        echo $! > flask.pid
        # Wait for server to be ready
        timeout 60 bash -c 'until curl -f http://localhost:5000/health; do sleep 2; done'
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Run E2E tests
      run: |
        npm run test:e2e
      env:
        BASE_URL: http://localhost:5000
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 7
    
    - name: Upload test videos
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-videos
        path: test-results/
        retention-days: 7
    
    - name: Stop Flask server
      if: always()
      run: |
        if [ -f flask.pid ]; then
          kill $(cat flask.pid) || true
          rm flask.pid
        fi
    
    - name: Generate test summary
      if: always()
      run: |
        echo "## 🎭 E2E Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f playwright-report/index.html ]; then
          echo "✅ **E2E tests completed**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 View detailed report in artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **E2E tests failed or did not complete**" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📦 **Artifacts uploaded:**" >> $GITHUB_STEP_SUMMARY
        echo "- Playwright HTML report" >> $GITHUB_STEP_SUMMARY
        echo "- Test videos (on failure)" >> $GITHUB_STEP_SUMMARY
