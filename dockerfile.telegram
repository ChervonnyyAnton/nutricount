# Multi-stage build optimized for Telegram Web App
FROM python:3.11-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --user --no-cache-dir --no-warn-script-location -r requirements.txt

# Production stage
FROM python:3.11-slim

# Build arguments for metadata
ARG VERSION=dev
ARG BUILD_DATE
ARG VCS_REF

# Labels for better container management
LABEL org.opencontainers.image.title="Nutrition Tracker Telegram Web App" \
      org.opencontainers.image.description="WCAG 2.2 compliant nutrition tracking app for Telegram" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="Nutrition Tracker Team" \
      org.opencontainers.image.source="https://github.com/your-username/nutrition-tracker" \
      org.opencontainers.image.licenses="MIT"

WORKDIR /usr/src/app

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Install runtime dependencies including curl for health checks
RUN apt-get update && apt-get install -y \
    curl \
    sqlite3 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get autoclean

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/appuser/.local

# Copy application code with proper ownership
COPY --chown=appuser:appuser . .

# Create required directories with proper permissions
RUN mkdir -p /usr/src/app/data /usr/src/app/logs /usr/src/app/backups \
    && chown -R appuser:appuser /usr/src/app

# Create simple favicon and PWA icons for Telegram Web App
RUN mkdir -p static/img && \
    echo '<svg width="32" height="32" xmlns="http://www.w3.org/2000/svg"><rect width="32" height="32" fill="#0d6efd"/><text x="16" y="20" fill="white" font-size="16" text-anchor="middle">ðŸ¥—</text></svg>' > static/favicon-32x32.png && \
    echo '<svg width="16" height="16" xmlns="http://www.w3.org/2000/svg"><rect width="16" height="16" fill="#0d6efd"/><text x="8" y="11" fill="white" font-size="8" text-anchor="middle">ðŸ¥—</text></svg>' > static/favicon-16x16.png && \
    echo '<svg width="180" height="180" xmlns="http://www.w3.org/2000/svg"><rect width="180" height="180" fill="#0d6efd"/><text x="90" y="110" fill="white" font-size="64" text-anchor="middle">ðŸ¥—</text></svg>' > static/apple-touch-icon.png

# Switch to non-root user
USER appuser

# Add local bin to PATH for the user
ENV PATH=/home/appuser/.local/bin:$PATH

# Environment variables
ENV PYTHONPATH=/usr/src/app
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=app.py
ENV FLASK_ENV=production

# Expose port
EXPOSE 5000

# Health check with proper URL
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Start application with gunicorn optimized for Telegram Web App
CMD ["gunicorn", "--config", "gunicorn.telegram.conf.py", "app:app"]
